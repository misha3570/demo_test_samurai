{"version":3,"file":"static/js/33.8629f8ea.chunk.js","mappings":"sKACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA2I,yBAA3I,EAA6K,wBAA7K,EAAgN,0BAAhN,EAAoP,yB,uBCI7O,MAAMA,EAAaC,IAAoB,IAAnB,YAACC,GAAYD,EACpC,OACIE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAC1BJ,EAAYK,KAAI,CAACC,EAAIC,KAClBN,EAAAA,EAAAA,KAAA,OAAcC,UAAWC,EAASC,UAC9BH,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACN,UAAWO,IAAA,IAAC,SAACC,GAASD,EAAA,OAAKC,EAAWP,EAAWA,CAAS,EAAEQ,GAAE,GAAAC,OAAKN,EAAGC,IAAKH,SAAEE,EAAGO,QADnFN,MAIZ,E,4CCRd,MAAMO,GAAcC,EAAAA,EAAAA,GAAU,IAiBxBC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EAfJE,IAEbC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAMG,aAAalB,SAAA,EAC/BH,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACFC,KAAK,OACLX,KAAM,SACNY,UAAWC,EAAAA,GACXC,YAAY,SACZC,SAAU,CAACC,EAAAA,EAAef,MAE9Bb,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,qBAOP0B,EAAWX,IAMhBC,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAA3B,SAAA,CACKe,EAAMa,YAAYC,aAAa5B,KAAI,CAACC,EAAI4B,KAAQjC,EAAAA,EAAAA,KAAA,OAAeC,UAAWC,EAAUC,SAAEE,GAA5B4B,MAC3DjC,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACe,EAAgB,CAACK,SARZc,IACdhB,EAAMiB,WAAWD,EAASE,OAAO,S,cCnBlC,MAAMC,EAAWnB,IACpBoB,QAAQC,IAAIrB,GACRA,EAAMsB,QAINrB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAACH,EAAU,CAACE,YAAamB,EAAMa,YAAYhC,eAC3CC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACvBH,EAAAA,EAAAA,KAAC6B,EAAO,CAACM,WAAYjB,EAAMiB,WAAYJ,YAAab,EAAMa,YAAaU,mBAAoBvB,EAAMuB,2BANnGzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAAChC,GAAG,Y,kCCD3B,IAAIiC,EAAmBC,IACnBN,QAAQC,IAAIK,EAAMb,aACX,CACHA,YAAaa,EAAMb,YACnBS,OAAQI,EAAMC,WAAWL,SAI7BM,EAAsBC,IACf,CACHN,mBAAqBO,IACjBD,GAASE,EAAAA,EAAAA,IAAkCD,GAAG,EAElDb,WAAae,IACTH,GAASI,EAAAA,EAAAA,IAAwBD,GAAa,KAK1DE,EAAAA,EAAAA,KACIC,EAAAA,EAAAA,IAAQV,EAAiBG,GAD7BM,CAIEf,GAMF,SAAee,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,IAAQV,EAAiBG,GACzBQ,EAAAA,EAFJ,CAGEjB,E,6ECrCF,MAAMkB,EAAuBX,IAAK,CAC9BJ,OAAQI,EAAMC,WAAWL,SAGhBc,EAAoBE,IAC7B,MAAMC,UAAyBC,EAAAA,UAC3BC,MAAAA,GAEI,OAAIC,KAAK1C,MAAMsB,QAERxC,EAAAA,EAAAA,KAACwD,EAAS,IAAKI,KAAK1C,SAFGlB,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAAChC,GAAG,UAI/C,EAOJ,OAHqC2C,EAAAA,EAAAA,IAAQE,EAARF,CAA6BI,EAG7B,C","sources":["webpack://projectfordeploy/./src/component/Dialogs/Dialogs.module.css?f7a1","component/Dialogs/dialogItem/dialogItem.jsx","component/Dialogs/message/message.jsx","component/Dialogs/Dialogs.jsx","component/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ifgGR\",\"dialogsItems\":\"Dialogs_dialogsItems__0TocS\",\"dialog\":\"Dialogs_dialog__Id4pG\",\"navlink\":\"Dialogs_navlink__xN+cE\",\"active\":\"Dialogs_active__szJyO\",\"messages\":\"Dialogs_messages__Tf9KG\",\"message\":\"Dialogs_message__6whYc\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const DialogItem = ({dialogsData}) => {\r\n    return (\r\n        <div className={s.dialogsItems}>\r\n            {dialogsData.map((el, id) =>\r\n                <div key={id} className={s.dialog}>\r\n                    <NavLink className={({isActive}) => isActive ? s.active : s.navlink} to={`${el.id}`}>{el.name}</NavLink>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/formsControl/formsControl\";\r\nimport {maxLength, requiredField} from \"../../../utils/validators/validators\";\r\nconst maxLength50 = maxLength(50)\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                type=\"text\"\r\n                name={'dialog'}\r\n                component={Textarea}\r\n                placeholder='Dialog'\r\n                validate={[requiredField, maxLength50]}\r\n            />\r\n            <button>Add Message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({form: 'message'})(MessageForm)\r\n\r\nexport const Message = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.addMessage(formData.dialog)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.dialogsPage.messagesData.map((el, key) => <div key={key} className={s.message}>{el}</div>)}\r\n            <div>\r\n                <ReduxMessageForm onSubmit={onSubmit} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from \"./dialogItem/dialogItem\";\r\nimport {Message} from \"./message/message\";\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\n\r\nexport const Dialogs = (props) => {\r\n    console.log(props)\r\n    if(!props.isAuth) {\r\n       return <Navigate to='/login' />\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <DialogItem dialogsData={props.dialogsPage.dialogsData}/>\r\n            <div className={s.messages}>\r\n                <Message addMessage={props.addMessage} dialogsPage={props.dialogsPage} changeValueMessage={props.changeValueMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {addDialogsActionCreator, updateNewDialogsTextActionCreator} from \"../../redux/dialogsReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log(state.dialogsPage)\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.headerPage.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeValueMessage: (e) => {\r\n            dispatch(updateNewDialogsTextActionCreator(e))\r\n        },\r\n        addMessage: (textMessage) => {\r\n            dispatch(addDialogsActionCreator(textMessage))\r\n        }\r\n    }\r\n}\r\n\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    // withAuthRedirect,\r\n\r\n)(Dialogs)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateForRedirect = (state) => ({\r\n    isAuth: state.headerPage.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirecComponent extends React.Component {\r\n        render() {\r\n\r\n            if(!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateForRedirect)(RedirecComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n// if(!this.props.isAuth) return <Navigate to='/login' />\r\n// return <Component {...props}/>"],"names":["DialogItem","_ref","dialogsData","_jsx","className","s","children","map","el","id","NavLink","_ref2","isActive","to","concat","name","maxLength50","maxLength","ReduxMessageForm","reduxForm","form","props","_jsxs","onSubmit","handleSubmit","Field","type","component","Textarea","placeholder","validate","requiredField","Message","_Fragment","dialogsPage","messagesData","key","formData","addMessage","dialog","Dialogs","console","log","isAuth","changeValueMessage","Navigate","mapStateToProps","state","headerPage","mapDispatchToProps","dispatch","e","updateNewDialogsTextActionCreator","textMessage","addDialogsActionCreator","compose","connect","withAuthRedirect","mapStateForRedirect","Component","RedirecComponent","React","render","this"],"sourceRoot":""}