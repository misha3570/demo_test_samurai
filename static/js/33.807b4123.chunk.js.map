{"version":3,"file":"static/js/33.807b4123.chunk.js","mappings":"sKACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA2I,yBAA3I,EAA6K,wBAA7K,EAAgN,0BAAhN,EAAoP,yB,uBCI7O,MAAMA,EAAaC,IAAoB,IAAnB,YAACC,GAAYD,EACpC,OACIE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAC1BJ,EAAYK,KAAI,CAACC,EAAIC,KAClBN,EAAAA,EAAAA,KAAA,OAAcC,UAAWC,EAASC,UAC9BH,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACN,UAAWO,IAAA,IAAC,SAACC,GAASD,EAAA,OAAKC,EAAWP,EAAWA,CAAS,EAAEQ,GAAE,GAAAC,OAAKN,EAAGC,IAAKH,SAAEE,EAAGO,QADnFN,MAIZ,E,4CCPd,MAiBMO,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EAjBJE,IACjB,MAAMC,GAAcC,EAAAA,EAAAA,GAAU,IAE9B,OACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUJ,EAAMK,aAAalB,SAAA,EAC/BH,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACFC,KAAK,OACLX,KAAM,SACNY,UAAWC,EAAAA,GACXC,YAAY,SACZC,SAAU,CAACC,EAAAA,EAAeX,MAE9BjB,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,kBACL,IAMF0B,EAAWb,IAMbG,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAA3B,SAAA,CACFa,EAAMe,YAAYC,aAAa5B,KAAI,CAACC,EAAI4B,KAAQjC,EAAAA,EAAAA,KAAA,OAAeC,UAAWC,EAAUC,SAAEE,GAA5B4B,MAC3DjC,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACa,EAAgB,CAACO,SARRc,IACdC,QAAQC,IAAIF,EAASG,QACrBrB,EAAMsB,WAAWJ,EAASG,OAAO,S,cCrBlC,MAAME,EAAWvB,IACpBmB,QAAQC,IAAIpB,GACRA,EAAMwB,QAINrB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAACH,EAAU,CAACE,YAAaiB,EAAMe,YAAYhC,eAC3CC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACvBH,EAAAA,EAAAA,KAAC6B,EAAO,CAACS,WAAYtB,EAAMsB,WAAYP,YAAaf,EAAMe,YAAaU,mBAAoBzB,EAAMyB,2BANnGzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAAChC,GAAG,Y,kCCD3B,IAAIiC,EAAmBC,IACZ,CACHb,YAAaa,EAAMb,cAKvBc,EAAsBC,IACf,CACHL,mBAAqBM,IACjBD,GAASE,EAAAA,EAAAA,IAAkCD,GAAG,EAElDT,WAAaW,IACTH,GAASI,EAAAA,EAAAA,IAAwBD,GAAa,KAK1DE,EAAAA,EAAAA,KACIC,EAAAA,EAAAA,IAAQT,EAAiBE,GAD7BM,CAIEZ,GAMF,SAAeY,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,IAAQT,EAAiBE,GACzBQ,EAAAA,EAFJ,CAGEd,E","sources":["webpack://projectfordeploy/./src/component/Dialogs/Dialogs.module.css?f7a1","component/Dialogs/dialogItem/dialogItem.jsx","component/Dialogs/message/message.jsx","component/Dialogs/Dialogs.jsx","component/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ifgGR\",\"dialogsItems\":\"Dialogs_dialogsItems__0TocS\",\"dialog\":\"Dialogs_dialog__Id4pG\",\"navlink\":\"Dialogs_navlink__xN+cE\",\"active\":\"Dialogs_active__szJyO\",\"messages\":\"Dialogs_messages__Tf9KG\",\"message\":\"Dialogs_message__6whYc\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const DialogItem = ({dialogsData}) => {\r\n    return (\r\n        <div className={s.dialogsItems}>\r\n            {dialogsData.map((el, id) =>\r\n                <div key={id} className={s.dialog}>\r\n                    <NavLink className={({isActive}) => isActive ? s.active : s.navlink} to={`${el.id}`}>{el.name}</NavLink>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/formsControl/formsControl\";\r\nimport {maxLength, requiredField} from \"../../../utils/validators/validators\";\r\n\r\nconst MessageForm = (props) => {\r\n    const maxLength50 = maxLength(50)\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                type=\"text\"\r\n                name={'dialog'}\r\n                component={Textarea}\r\n                placeholder='Dialog'\r\n                validate={[requiredField, maxLength50]}\r\n            />\r\n            <button>Add Message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({form: 'message'})(MessageForm)\r\n\r\nexport const Message = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData.dialog)\r\n        props.addMessage(formData.dialog)\r\n    }\r\n\r\n    return <>\r\n        {props.dialogsPage.messagesData.map((el, key) => <div key={key} className={s.message}>{el}</div>)}\r\n        <div>\r\n            <ReduxMessageForm onSubmit={onSubmit}/>\r\n            {/*<textarea*/}\r\n            {/*    value={props.dialogsPage.valueInputDialog}*/}\r\n            {/*    onChange={(e) => props.changeValueMessage(e.target.value)}*/}\r\n            {/*    name=\"\" id=\"\" cols=\"30\" rows=\"10\"*/}\r\n            {/*/>*/}\r\n            {/*<button onClick={props.addMessage}>Add Message</button>*/}\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from \"./dialogItem/dialogItem\";\r\nimport {Message} from \"./message/message\";\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\n\r\nexport const Dialogs = (props) => {\r\n    console.log(props)\r\n    if(!props.isAuth) {\r\n       return <Navigate to='/login' />\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <DialogItem dialogsData={props.dialogsPage.dialogsData}/>\r\n            <div className={s.messages}>\r\n                <Message addMessage={props.addMessage} dialogsPage={props.dialogsPage} changeValueMessage={props.changeValueMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {addDialogsActionCreator, updateNewDialogsTextActionCreator} from \"../../redux/dialogsReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        // isAuth: state.headerPage.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeValueMessage: (e) => {\r\n            dispatch(updateNewDialogsTextActionCreator(e))\r\n        },\r\n        addMessage: (textMessage) => {\r\n            dispatch(addDialogsActionCreator(textMessage))\r\n        }\r\n    }\r\n}\r\n\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    // withAuthRedirect,\r\n\r\n)(Dialogs)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n"],"names":["DialogItem","_ref","dialogsData","_jsx","className","s","children","map","el","id","NavLink","_ref2","isActive","to","concat","name","ReduxMessageForm","reduxForm","form","props","maxLength50","maxLength","_jsxs","onSubmit","handleSubmit","Field","type","component","Textarea","placeholder","validate","requiredField","Message","_Fragment","dialogsPage","messagesData","key","formData","console","log","dialog","addMessage","Dialogs","isAuth","changeValueMessage","Navigate","mapStateToProps","state","mapDispatchToProps","dispatch","e","updateNewDialogsTextActionCreator","textMessage","addDialogsActionCreator","compose","connect","withAuthRedirect"],"sourceRoot":""}